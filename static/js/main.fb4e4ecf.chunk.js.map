{"version":3,"sources":["components/MonthBar/MonthBar.jsx","views/Osman/Osman.jsx","App.js","serviceWorker.js","index.js"],"names":["TabContainer","props","react_default","a","createElement","Typography_default","component","style","padding","children","MonthBar","state","value","handleChange","event","_this","setState","classes","this","className","root","AppBar_default","position","color","Tabs_default","onChange","indicatorColor","textColor","variant","scrollButtons","Tab_default","label","React","Component","withStyles","theme","flexGrow","width","backgroundColor","palette","background","paper","_ref","dir","FullWidthTabs","handleChangeIndex","index","_this$props","lib_default","axis","direction","onChangeIndex","Osman_TabContainer","components_MonthBar_MonthBar","withTheme","RoosterPoederCoat","_this2","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","fab","icon","Home_default","classNames","fabGreen","fabOrange","PersonPin_default","App_TabContainer","Osman","map","Zoom_default","key","in","timeout","transitionDelay","concat","unmountOnExit","Fab_default","height","bottom","spacing","unit","right","common","white","green","&:hover","orange","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb4e4ecf.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n// components\r\n//import Osman from \"./src/Diensten/Osman/osman.jsx\"\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass MonthBar extends React.Component {\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            <Tab label=\"jan\" />\r\n            <Tab label=\"feb\" />\r\n            <Tab label=\"mrt\" />\r\n            <Tab label=\"apr\" />\r\n            <Tab label=\"mei\" />\r\n            <Tab label=\"jun\" />\r\n            <Tab label=\"jul\" />\r\n            <Tab label=\"aug\" />\r\n            <Tab label=\"sep\" />\r\n            <Tab label=\"okt\" />\r\n            <Tab label=\"nov\" />\r\n            <Tab label=\"dec\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        {value === 0 && <TabContainer>One</TabContainer>}\r\n        {value === 1 && <TabContainer>Item Two</TabContainer>}\r\n        {value === 2 && <TabContainer>Item Three</TabContainer>}\r\n        {value === 3 && <TabContainer>Item Four</TabContainer>}\r\n        {value === 4 && <TabContainer>Item Five</TabContainer>}\r\n        {value === 5 && <TabContainer>Item Six</TabContainer>}\r\n        {value === 6 && <TabContainer>Item Seven</TabContainer>}\r\n        {value === 7 && <TabContainer>Item Seven</TabContainer>}\r\n        {value === 8 && <TabContainer>Item 8</TabContainer>}\r\n        {value === 9 && <TabContainer>Item 9</TabContainer>}\r\n        {value === 10 && <TabContainer>Item 10</TabContainer>}\r\n        {value === 11 && <TabContainer>Item 11</TabContainer>}\r\n        {value === 12 && <TabContainer>Item 12</TabContainer>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMonthBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MonthBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// core components\r\nimport MonthBar from \"components/MonthBar/MonthBar.jsx\";\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100',\r\n  },\r\n});\r\n\r\nclass FullWidthTabs extends React.Component {\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({ value: index });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab label=\"Item One\" />\r\n            <Tab label=\"Item Two\" />\r\n            <Tab label=\"Item Three\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={this.state.value}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <TabContainer dir={theme.direction}><MonthBar /></TabContainer>\r\n          <TabContainer dir={theme.direction}>Item Two</TabContainer>\r\n          <TabContainer dir={theme.direction}>Item Three</TabContainer>\r\n        </SwipeableViews>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFullWidthTabs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);\r\n","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SwipeableViews from 'react-swipeable-views';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\n// components\nimport MonthBar from \"./components/MonthBar/MonthBar.jsx\";\nimport Osman from \"./views/Osman/Osman.jsx\"\n\nfunction TabContainer(props) {\n  const { children, dir } = props;\n\n  return (\n    <Typography component=\"div\" dir={dir}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100',\n    position: 'relative',\n    height: '100',\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n  fabOrange: {\n    color: theme.palette.common.white,\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[600],\n    },\n  },\n});\n\nclass RoosterPoederCoat extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    const { classes, theme } = this.props;\n    const transitionDuration = {\n      enter: theme.transitions.duration.enteringScreen,\n      exit: theme.transitions.duration.leavingScreen,\n    };\n\n    const fabs = [\n      {\n        color: 'primary',\n        className: classes.fab,\n        icon: <HomeIcon />,\n      },\n      {\n        color: 'secondary',\n        className: classes.fab,\n        icon: <HomeIcon />,\n      },\n      {\n        color: 'inherit',\n        className: classNames(classes.fab, classes.fabGreen),\n        icon: <HomeIcon />,\n      },\n      {\n        color: 'inherit',\n        className: classNames(classes.fab, classes.fabOrange),\n        icon: <HomeIcon />,\n      },\n    ];\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n          >\n            <Tab icon={<PersonPinIcon />} label=\"Osman\" />\n            <Tab icon={<PersonPinIcon />} label=\"Remco\" />\n            <Tab icon={<PersonPinIcon />} label=\"Cengiz\" />\n            <Tab icon={<PersonPinIcon />} label=\"Kubilay\" />\n          </Tabs>\n        </AppBar>\n        {value === 0 && <TabContainer><Osman /></TabContainer>}\n        {value === 1 && <TabContainer><MonthBar /></TabContainer>}\n          {value === 2 && <TabContainer><MonthBar /></TabContainer>}\n          {value === 3 && <TabContainer><MonthBar /></TabContainer>}\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={this.state.value === index}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${this.state.value === index ? transitionDuration.exit : 0}ms`,\n            }}\n            unmountOnExit\n          >\n            <Fab className={fab.className} color={fab.color}>\n              {fab.icon}\n            </Fab>\n          </Zoom>\n        ))}\n      </div>\n    );\n  }\n}\n\nRoosterPoederCoat.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(RoosterPoederCoat);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}